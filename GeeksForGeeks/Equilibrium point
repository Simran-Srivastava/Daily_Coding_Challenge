'''
Equilibrium point
Given an array A of N positive numbers. The task is to find the position where equilibrium first occurs in the array. Equilibrium position in an array is a position such that the sum of elements before it is equal to the sum of elements after it.

Input:
The first line of input contains an integer T, denoting the number of test cases. Then T test cases follow. First line of each test case contains an integer N denoting the size of the array. Then in the next line are N space separated values of the array A.

Output:
For each test case in a new  line print the position at which the elements are at equilibrium if no equilibrium point exists print -1.

Constraints:
1 <= T <= 100
1 <= N <= 106
1 <= Ai <= 108

Example:
Input:
2
1
1
5
1 3 5 2 2

Output:
1
3
'''

#Python Code

def func(arr):
    leftsum=0
    sum1=0
    for i in range(len(arr)):
        sum1+=arr[i]
    for j in range(len(arr)):
        sum1=sum1-arr[j]
        if sum1==leftsum:
            return j+1
        leftsum=leftsum+arr[j]
        
    return -1
    
t=int(input())
for i in range(t):
    n=int(input())
    arr=list(map(int, input().split( )))
    c= func(arr)
    print(c)
