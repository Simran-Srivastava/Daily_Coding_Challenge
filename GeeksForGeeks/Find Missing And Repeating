'''
Given an unsorted array of size N of positive integers. One number 'A' from set {1, 2, …N} is missing and one number 'B' occurs twice in array. Find these two numbers.

Note: If you find multiple answers then print the Smallest number found. Also, expected solution is O(n) time and constant extra space.

Input:
The first line of input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the size of array. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.

Output:
Print B, the repeating number followed by A which is missing in a single line.

Constraints:
1 ≤ T ≤ 100
1 ≤ N ≤ 106
1 ≤ A[i] ≤ N

Example:
Input:
2
2
2 2
3 
1 3 3

Output:
2 1
3 2
'''

#Python Code
def missing(arr,n):
    if arr[0]!=1:
        return 1
    else:
        for j in range(n-1):
            #print(arr[i+1]-arr[i])
            if arr[j+1]-arr[j]>1:
                return arr[j]+1
    return n

t=int(input())
for u in range(t):
    n=int(input())
    arr=input().split( )
    for i in range(n):
        arr[i]=int(arr[i])
    
    arr.sort()
    for i in range(n-1):
        if arr[i]==arr[i+1]:
            print(arr[i], end=' ')
            break
    c=missing(arr,n)
    print(c)
